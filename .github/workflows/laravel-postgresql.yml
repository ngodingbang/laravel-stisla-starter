# GitHub Action for Laravel with PostgreSQL
# https://github.com/shivammathur/setup-php/blob/master/examples/laravel-postgres.yml
name: Testing Laravel with PostgreSQL

on: [push, pull_request]

jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.6
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ngodingbang_laravel_stisla_starter
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0', '8.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, pgsql
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: |
          rm composer.lock
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install front-end dependencies
        run: |
          npm install
          npm run dev

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.github.postgresql', '.env');"
          php artisan key:generate

      - name: Clear config
        run: php artisan config:clear

      - name: Run migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Test with pest
        run: |
          mkdir -p build/logs
          vendor/bin/pest --verbose --coverage-clover build/logs/clover.xml
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Upload scrutinizer coverage
        # https://scrutinizer-ci.com/docs/tools/external-code-coverage/#php
        if: matrix.php-versions == '7.4'
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml
        # Note: this steps below has been disabled because of the deprecated guzzle/common package issue
        #
        # uses: sudo-bot/action-scrutinizer@latest
        # with:
        #   cli-args: "--format=php-clover build/logs/clover.xml"

      - name: Upload coverage results to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v
